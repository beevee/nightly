name: release

on:
  schedule:
    - cron:  '14 20 * * *' # Runs at 20:14 UTC (5:14 JST) every day.
  repository_dispatch:
    types: [release]

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          repository: 'reviewdog/reviewdog'
          ref: 'nightly' # TODO(haya14busa): switch to master.

      - name: Setup
        run: |
          git fetch --tags
          git fetch --prune --unshallow
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"

      - name: Set previous sha/tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # ref: https://goreleaser.com/customization/#Release
          PREVIOUS_TAG="$(curl -H "Authorization: token ${GITHUB_TOKEN}" https://api.github.com/repos/reviewdog/nightly/releases | jq -r '.[0].tag_name')"
          PREVIOUS_SHA="$(echo "${PREVIOUS_TAG}" | grep -oP '.*\+\K.*' )"
          if [ -n "${PREVIOUS_SHA}" ]; then
            git tag -a "${PREVIOUS_TAG}" -m "prev-nightly" "${PREVIOUS_SHA}"
            echo "::set-env name=PREVIOUS_SHA::${PREVIOUS_SHA}"
            echo "::set-env name=GORELEASER_PREVIOUS_TAG::${PREVIOUS_TAG}"
          fi

      - name: Add tag
        run: |
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git tag -a "$(git describe --abbrev=0 --tags)-nightly-$(date +%F)+$(git rev-parse --short HEAD)" -m "nightly release"

      - uses: goreleaser/goreleaser-action@v1
        with:
          version: latest
          args: release --rm-dist --config=.goreleaser-nightly.yml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Test installation
        run: |
          curl -sfL https://raw.githubusercontent.com/reviewdog/nightly/master/install.sh| sh -s
          ./bin/reviewdog -version
